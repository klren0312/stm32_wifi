app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        $scope.afterPrettify = format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        $scope.afterPrettify = format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        $scope.afterPrettify = format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        $scope.afterPrettify = format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        $scope.afterPrettify = format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        $scope.afterPrettify = format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        $scope.afterPrettify = format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        $scope.afterPrettify = format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        $scope.afterPrettify = format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        $scope.afterPrettify = format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        $scope.afterPrettify = format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        $scope.afterPrettify = format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }

    $scope.prettify = function() {
        format($scope.resbody, false)
    }


    function format(txt, compress) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }


    function format(txt, compress /*是否为压缩模式*/ ) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }


    function format(txt, compress /*是否为压缩模式*/ ) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }


    function format(txt, compress /*是否为压缩模式*/ ) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }


    function format(txt, compress /*是否为压缩模式*/ ) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }


    function format(txt, compress /*是否为压缩模式*/ ) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }


    function format(txt, compress /*是否为压缩模式*/ ) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }


    function format(txt, compress /*是否为压缩模式*/ ) { /* 格式化JSON源码(对象转换为JSON文本) */
        var indentChar = '    ';
        if (/^\s*$/.test(txt)) {
            alert('数据为空,无法格式化! ');
            return;
        }
        try { var data = eval('(' + txt + ')'); } catch (e) {
            alert('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');
            return;
        };
        var draw = [],
            last = false,
            This = this,
            line = compress ? '' : '\n',
            nodeCount = 0,
            maxDepth = 0;

        var notify = function(name, value, isLast, indent /*缩进*/ , formObj) {
            nodeCount++; /*节点计数*/
            for (var i = 0, tab = ''; i < indent; i++) tab += indentChar; /* 缩进HTML */
            tab = compress ? '' : tab; /*压缩模式忽略缩进*/
            maxDepth = ++indent; /*缩进递增并记录*/
            if (value && value.constructor == Array) { /*处理数组*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '[' + line); /*缩进'[' 然后换行*/
                for (var i = 0; i < value.length; i++)
                    notify(i, value[i], i == value.length - 1, indent, false);
                draw.push(tab + ']' + (isLast ? line : (',' + line))); /*缩进']'换行,若非尾元素则添加逗号*/
            } else if (value && typeof value == 'object') { /*处理对象*/
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + '{' + line); /*缩进'{' 然后换行*/
                var len = 0,
                    i = 0;
                for (var key in value) len++;
                for (var key in value) notify(key, value[key], ++i == len, indent, true);
                draw.push(tab + '}' + (isLast ? line : (',' + line))); /*缩进'}'换行,若非尾元素则添加逗号*/
            } else {
                if (typeof value == 'string') value = '"' + value + '"';
                draw.push(tab + (formObj ? ('"' + name + '":') : '') + value + (isLast ? '' : ',') + line);
            };
        };
        var isLast = true,
            indent = 0;
        notify('', data, isLast, indent, false);
        return draw.join('');
    }
})

app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.stringify(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = JSON.parse(req.data)
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {
        $http({
            method: "delete",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {
        $http({
            method: "put",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {
        $http({
            method: "post",
            url: $scope.requestUrl,
            header: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            }
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            url: $scope.requestUrl,
            headers: {
                "content-type": "application/json"
            },
            data: $scope.reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            headers: {
                "content-type": "application/json"
            },
            data: reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            headers: {
                "content-type": "application/json"
            },
            data: reqbody
        }).then(function(req) {
            $scope.resbody = req.data
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            headers: {
                "content-type": "application/json"
            },
            data: reqbody
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            headers: {
                "content-type": "application/json"
            },
            data: reqbody
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            headers: {
                "content-type": "application/json"
            },
            data: reqbody
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {
        $http({
            method: "get",
            headers: {
                "content-type": "application/json"
            },
            data: reqbody
        })
    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.reqbody), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.reqbody), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.reqbody), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify1 = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.prettify = function() {
        try {
            $scope.jsonStr = JSON.stringify(JSON.parse($scope.jsonStr), undefined, 2);
        } catch (e) {
            alert(e);
        }
    };
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.reqbody, undefined, 2);
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.req.body, undefined, 2);
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.jsonStr = JSON.stringify($scope.req.body, undefined, 2);
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {
    $scope.getFun = function() {

    }
    $scope.postFun = function() {

    }
    $scope.putFun = function() {

    }
    $scope.deleteFun = function() {

    }
})
app.controller("apiTestCtrl", function($scope, $log, $http) {

})
app.controller("apiTestCtrl", function($scope, $log, $http) {

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"


    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })
})
app.controller("homeCtrl", function($scope, $log, $http) {

})
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 0) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})
 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"


    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })
})
app.controller("homeCtrl", function($scope, $log, $http) {

})
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 0) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")

        } else {
             
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"


    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })
})
app.controller("homeCtrl", function($scope, $log, $http) {

})
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 0) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")

        } else {
             
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"


    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })
})
app.controller("homeCtrl", function($scope, $log, $http) {

})
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"


    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })
})
app.controller("homeCtrl", function($scope, $log, $http) {

})
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 0) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"


    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })
})
app.controller("homeCtrl", function($scope, $log, $http) {

})
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 0) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})
app.controller("historydataCtrl", function($scope, $http, $log) {
    var rooturl = "http://119.29.201.31:3000"

    var map = new AMap.Map('mapcontainer', {
        resizeEnable: true,
        zoom: 30,
        center: [118.310948, 32.274839]
    });
    marker = new AMap.Marker({
        icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
        position: [118.310948, 32.274839]
    });
    marker.setMap(map);

    //请求所有数据
    var alldataUrl = rooturl + "/alldata"
    $http({
        method: "get",
        url: alldataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.alldatas = req.data
            // 设置分页相关数据
        $scope.setPage($scope.alldatas)
    })

    //请求数据的平均值
    var avgdataUrl = rooturl + "/avgdata"
    $http({
        method: "get",
        url: avgdataUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $log.log(req)
        $scope.temavg = req.data.temavg
        $scope.humavg = req.data.humavg
    })

    //请求喂食次数
    var eattimesUrl = rooturl + "/eattimes"
    $http({
        method: "get",
        url: eattimesUrl,
        headers: {
            "content-type": "application/json"
        }
    }).then(function(req) {
        $scope.eattimes = req.data.eattimes
    })


})
app.controller("homeCtrl", function($scope, $log, $http) {

})
 app.directive('indoorAnalysis', function() {
     return {
         scope: {
             id: "@",
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller, $http) {
             console.log($scope.d08)
             var option = {
                 backgroundColor: '#2c343c',

                 title: {
                     text: '爱宠离屋分析',
                     left: 'center',
                     top: 20,
                     textStyle: {
                         color: '#ccc'
                     }
                 },

                 tooltip: {
                     trigger: 'item',
                     formatter: "{a} <br/>{b} : {c} ({d}%)"
                 },

                 visualMap: {
                     show: false,
                     min: 80,
                     max: 600,
                     inRange: {
                         colorLightness: [0, 1]
                     }
                 },
                 series: [{
                     name: '离屋时段',
                     type: 'pie',
                     radius: '55%',
                     center: ['50%', '50%'],
                     data: [
                         { value: 1074, name: '0点~8点' },
                         { value: 1, name: '9点~12点' },
                         { value: 1, name: '13点~18点' },
                         { value: 929, name: '19点~23点' },
                     ].sort(function(a, b) { return a.value - b.value; }),
                     roseType: 'radius',
                     label: {
                         normal: {
                             textStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             }
                         }
                     },
                     labelLine: {
                         normal: {
                             lineStyle: {
                                 color: 'rgba(255, 255, 255, 0.3)'
                             },
                             smooth: 0.2,
                             length: 10,
                             length2: 20
                         }
                     },
                     itemStyle: {
                         normal: {
                             color: '#c23531',
                             shadowBlur: 200,
                             shadowColor: 'rgba(0, 0, 0, 0.5)'
                         }
                     },

                     animationType: 'scale',
                     animationEasing: 'elasticOut',
                     animationDelay: function(idx) {
                         return Math.random() * 200;
                     }
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         },
         controller: function($http, $log, $scope) {
             //离屋分析
             var eattimesUrl = "http://www.zzes1314.cn:3000/getIndoorAnalysis"
             $http({
                 method: "get",
                 url: eattimesUrl,
                 headers: {
                     "content-type": "application/json"
                 }
             }).then(function(req) {
                 $log.log(req.data[0])
                 var data = req.data[0]
                 $scope.d08 = data.d08
                 $scope.d912 = data.d912
                 $scope.d1318 = data.d1318
                 $scope.d1923 = data.d1923


                 $scope.date = new Date(data.updatetime).toLocaleString()
             })
         }
     };
 });
app.controller("realdataCtrl", function($scope, $log, $http) {
    var socket = io('http://119.29.201.31:5000')
    socket.on('indoor', function(data) {
        console.log("indoor:" + data)

        if (data == 0) {
            $(".doorimg").removeClass("imgactive")
            $("#outimg").addClass("imgactive")
        } else {
            $(".doorimg").removeClass("imgactive")
            $("#inimg").addClass("imgactive")
        }
    })
    socket.on('feng', function(data) {
        console.log("feng:" + data)

        if (data == 1) {
            $(".fengimg").removeClass("imgactive")
            $("#fengoff").addClass("imgactive")
        } else {
            $(".fengimg").removeClass("imgactive")
            $("#fengon").addClass("imgactive")
        }
    })
})

 app.directive('realhumData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             humdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.legend = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.humdata = [55, 54, 44, 56, 66, 52]
             socket.on('hum', function(data) {
                 console.log(data)
                 var time = new Date().toLocaleTimeString()
                 $scope.legend.shift()
                 $scope.legend.push(time)
                 $scope.humdata.shift()
                 $scope.humdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#00688B'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['湿度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.legend,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value',
                 }],
                 series: [{
                     name: '湿度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.humdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
 app.directive('realtemData', function() {
     return {
         scope: {
             id: "@",
             legend: "=",
             item: "=",
             temdata: "="
         },
         restrict: 'E',
         template: '<div class="real-data-charts"></div>',
         replace: true,
         link: function($scope, element, attrs, controller) {
             $scope.e = [1, 2, 3, 4, 5, "the newest"]
             var socket = io('http://119.29.201.31:5000')
             $scope.temdata = [30, 30, 30, 30, 33, 31]
             socket.on('tem', function(data) {
                 console.log(data)
                 var t = new Date().toLocaleTimeString()
                 $scope.e.shift()
                 $scope.e.push(t)
                 $scope.temdata.shift()
                 $scope.temdata.push(data)
                 myChart.setOption(option);
             })
             var option = {
                 color: ['#CD3700'],
                 tooltip: {
                     trigger: 'axis',
                     axisPointer: { // 坐标轴指示器，坐标轴触发有效
                         type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                     }
                 },
                 legend: {
                     data: ['温度'],
                 },
                 label: {
                     normal: {
                         show: true
                     }
                 },
                 grid: {
                     left: '3%',
                     right: '4%',
                     bottom: '3%',
                     containLabel: true
                 },
                 xAxis: [{
                     type: 'category',
                     data: $scope.e,
                     axisTick: {
                         alignWithLabel: true
                     }
                 }],
                 yAxis: [{
                     type: 'value'
                 }],
                 series: [{
                     name: '温度',
                     type: 'line',
                     barWidth: '60%',
                     data: $scope.temdata
                 }]
             };
             var myChart = echarts.init(document.getElementById($scope.id), 'macarons');
             myChart.setOption(option);

         }
     };
 });
app.controller("timeCtrl", function($scope, $log, $http) {
    var rooturl = "http://119.29.201.31:3000"
        // var rooturl = "http://localhost:3000"
    if (localStorage.getItem("zzes") == "klren") {
        $scope.showthis = true
    } else {
        $scope.showthis = false
    }
    // 访问喂食接口
    $scope.givefood = function() {
        if ($scope.showthis) {
            var givefoodurl = rooturl + "/buttonclick1"
            $http({
                method: "get",
                url: givefoodurl,
                headers: {
                    "content-type": "application/json"
                }
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //喂食定时接口
    $scope.time2feed = function() {
        if ($scope.showthis) {
            var time2feedurl = rooturl + "/times"
            var databody = '{"times":' + $scope.feedtimes + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2feedurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

    //消息定时接口
    $scope.time2msg = function() {
        if ($scope.showthis) {
            var time2msgurl = rooturl + "/msgtime"
            var databody = '{"hour":' + $scope.hour + ',"minute":' + $scope.minute + ',"second":' + $scope.second + '}';
            $log.log(databody)
            $http({
                method: "post",
                url: time2msgurl,
                headers: {
                    "content-type": "application/json"
                },
                data: databody
            }).then(function(req) {

            })
        } else {
            new Notification("错误！", {
                body: "您未被治电授权进行此操作！"
            })
        }
    }

})